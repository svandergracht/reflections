What happens when you initialize a repository? Why do you need to do it?

	It creates an invisible .git. You need to do it in order to make that file.

How is the staging area different from the working directory and the repository?
What value do you think it offers?

	The staging area is where files that are to be committed go. The working directory and repository contain all of the files in the working directory. This allows you to pick and choose which files to commit.

How can you use the staging area to make sure you have one commit per logical
change?

	The staging area allows you to commit several files at the same time.

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?
	
	Branches are helpful when you are working with a feature that may not end up in the final or is experimental because then you can work on two sets of code easily.

How do the diagrams help you visualize the branch structure?

	Diagrams help show reachability of your branches and what parents are by laying it all out in front of you.

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?
	
	Merging two branches adds new lines and deletes deleted lines from both branches. It is represented in the diagram to visually show how the two strings of commits become one.

What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges
manually?

	Pros of automatic merging is that there is less user error and its easier. Cons are that sometimes conflicts occur. Pros of manual merges mean no conflicts. Cons are that it is tedious and takes time.
